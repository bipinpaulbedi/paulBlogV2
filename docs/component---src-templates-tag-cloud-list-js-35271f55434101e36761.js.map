{"version":3,"sources":["webpack:///./src/templates/tagCloudList.js"],"names":["HomeContentLinks","styled","p","withConfig","displayName","componentId","TagCloudTemplate","_ref","edges","data","allMarkdownRemark","groupedPosts","R","ele","node","frontmatter","year","elems","Object","keys","sort","reverse","react__WEBPACK_IMPORTED_MODULE_5___default","a","createElement","_components_layout__WEBPACK_IMPORTED_MODULE_8__","map","Fragment","_components_blogList__WEBPACK_IMPORTED_MODULE_9__","_ref2","_ref2$node$frontmatte","title","pathForPage","href","key","pageQuery"],"mappings":"sTAQaA,EAAmBC,IAAOC,EAAVC,WAAA,CAAAC,YAAA,iCAAAC,YAAA,YAAGJ,CAAH,+FAYd,SAASK,EAATC,GAIZ,IAFsBC,EAEtBD,EAHDE,KACEC,kBAAqBF,MAGjBG,EAAeC,IAAU,SAAAC,GAC7B,OAAOA,EAAIC,KAAKC,YAAYC,MAC3BR,GAEGS,EAAQC,OAAOC,KAAKR,GACvBS,OACAC,UAEH,OACEC,EAAAC,EAAAC,cAACC,EAAA,EAAD,KACGR,EAAMS,IAAI,SAAAb,GACT,OACES,EAAAC,EAAAC,cAACF,EAAAC,EAAMI,SAAP,KACEL,EAAAC,EAAAC,cAACI,EAAA,EAAD,KAAYf,GACXF,EAAaE,GAAKa,IACjB,SAAAG,GAIM,IAAAC,EAAAD,EAHJf,KACEC,YAAegB,EAEbD,EAFaC,MAAOC,EAEpBF,EAFoBE,YAGxB,OACEV,EAAAC,EAAAC,cAACxB,EAAD,KACEsB,EAAAC,EAAAC,cAAA,KAAGS,KAAI,IAAMD,EAAeE,IAAKH,GAC9BA,UAahB,IAAMI,EAAS","file":"component---src-templates-tag-cloud-list-js-35271f55434101e36761.js","sourcesContent":["import React from \"react\"\nimport { graphql } from \"gatsby\"\nimport * as R from \"ramda\"\nimport styled from \"styled-components\"\n\nimport Layout from \"../components/layout\"\nimport { BlogGroup } from \"../components/blogList\"\n\nexport const HomeContentLinks = styled.p`\n  font-size: 1.2em;\n  margin-top: 0.5em;\n  margin-bottom: 0.5em;\n  a {\n    color: #333;\n    :hover {\n      color: #ff5252;\n    }\n  }\n`\n\nexport default function TagCloudTemplate({\n  data: {\n    allMarkdownRemark: { edges },\n  },\n}) {\n  const groupedPosts = R.groupBy(ele => {\n    return ele.node.frontmatter.year\n  }, edges)\n\n  const elems = Object.keys(groupedPosts)\n    .sort()\n    .reverse()\n\n  return (\n    <Layout>\n      {elems.map(ele => {\n        return (\n          <React.Fragment>\n            <BlogGroup>{ele}</BlogGroup>\n            {groupedPosts[ele].map(\n              ({\n                node: {\n                  frontmatter: { title, pathForPage },\n                },\n              }) => {\n                return (\n                  <HomeContentLinks>\n                    <a href={`/${pathForPage}`} key={title}>\n                      {title}\n                    </a>\n                  </HomeContentLinks>\n                )\n              }\n            )}\n          </React.Fragment>\n        )\n      })}\n    </Layout>\n  )\n}\n\nexport const pageQuery = graphql`\n  query TagCloudTemplateQuery($tag: String!) {\n    allMarkdownRemark(\n      sort: { fields: [frontmatter___date], order: DESC }\n      filter: { frontmatter: { tags: { in: [$tag] } } }\n    ) {\n      edges {\n        node {\n          frontmatter {\n            date(formatString: \"MMMM DD, YYYY\")\n            year: date(formatString: \"YYYY\")\n            title\n            pathForPage\n            tags\n          }\n        }\n      }\n    }\n  }\n`\n"],"sourceRoot":""}