{"version":3,"sources":["webpack:///./src/pages/index.js","webpack:///./src/components/blogList.js"],"names":["__webpack_require__","r","__webpack_exports__","react__WEBPACK_IMPORTED_MODULE_0__","react__WEBPACK_IMPORTED_MODULE_0___default","n","_components_layout__WEBPACK_IMPORTED_MODULE_1__","_components_seo__WEBPACK_IMPORTED_MODULE_2__","_components_blogList__WEBPACK_IMPORTED_MODULE_3__","IndexPage","a","createElement","title","keywords","BlogGroup","styled","div","withConfig","displayName","componentId","HomeContentLinks","p","IndexPageBlogList","react__WEBPACK_IMPORTED_MODULE_6___default","gatsby__WEBPACK_IMPORTED_MODULE_7__","query","render","_ref","edges","allMarkdownRemark","groupedPosts","R","ele","node","frontmatter","year","Object","keys","sort","reverse","map","Fragment","_ref2","_ref2$node$frontmatte","pathForPage","href","key","data","_public_static_d_3375400885_json__WEBPACK_IMPORTED_MODULE_5__"],"mappings":"0FAAAA,EAAAC,EAAAC,GAAA,IAAAC,EAAAH,EAAA,GAAAI,EAAAJ,EAAAK,EAAAF,GAAAG,EAAAN,EAAA,KAAAO,EAAAP,EAAA,KAAAQ,EAAAR,EAAA,KAaeS,UAPG,kBAChBL,EAAAM,EAAAC,cAACL,EAAA,EAAD,KACEF,EAAAM,EAAAC,cAACJ,EAAA,EAAD,CAAKK,MAAM,OAAOC,SAAU,sBAC5BT,EAAAM,EAAAC,cAACH,EAAA,EAAD,kKCJSM,EAAYC,IAAOC,IAAVC,WAAA,CAAAC,YAAA,sBAAAC,YAAA,eAAGJ,CAAH,+BAKTK,EAAmBL,IAAOM,EAAVJ,WAAA,CAAAC,YAAA,6BAAAC,YAAA,eAAGJ,CAAH,+FAiEdO,IArDW,kBACxBC,EAAAb,EAAAC,cAACa,EAAA,EAAD,CACEC,MAAK,aAgBLC,OAAQ,SAAAC,GAAsC,IAAdC,EAAcD,EAAnCE,kBAAqBD,MACxBE,EAAeC,IAAU,SAAAC,GAC7B,OAAOA,EAAIC,KAAKC,YAAYC,MAC3BP,GAMH,OAJcQ,OAAOC,KAAKP,GACvBQ,OACAC,UAEUC,IAAI,SAAAR,GACf,OACET,EAAAb,EAAAC,cAACY,EAAAb,EAAM+B,SAAP,KACElB,EAAAb,EAAAC,cAACG,EAAD,KAAYkB,GACXF,EAAaE,GAAKQ,IACjB,SAAAE,GAIM,IAAAC,EAAAD,EAHJT,KACEC,YAAetB,EAEb+B,EAFa/B,MAAOgC,EAEpBD,EAFoBC,YAGxB,OACErB,EAAAb,EAAAC,cAACS,EAAD,KACEG,EAAAb,EAAAC,cAAA,KAAGkC,KAAMD,EAAaE,IAAKlC,GACxBA,UAvCrBmC,KAAAC","file":"component---src-pages-index-js-ded00d7e30be7c17c373.js","sourcesContent":["import React from \"react\"\n\nimport Layout from \"../components/layout\"\nimport SEO from \"../components/seo\"\nimport IndexPageBlogList from \"../components/blogList\"\n\nconst IndexPage = () => (\n  <Layout>\n    <SEO title=\"Home\" keywords={[`bipin paul bedi`]} />\n    <IndexPageBlogList />\n  </Layout>\n)\n\nexport default IndexPage\n","import React from \"react\"\nimport { StaticQuery, graphql } from \"gatsby\"\nimport * as R from \"ramda\"\nimport styled from \"styled-components\"\n\nexport const BlogGroup = styled.div`\n  font-size: 2em;\n  color: #bbb;\n`\n\nexport const HomeContentLinks = styled.p`\n  font-size: 1.2em;\n  margin-top: 0.5em;\n  margin-bottom: 0.5em;\n  a {\n    color: #333;\n    :hover {\n      color: #ff5252;\n    }\n  }\n`\n\nconst IndexPageBlogList = () => (\n  <StaticQuery\n    query={graphql`\n      query IndexPageBlogListQuery {\n        allMarkdownRemark(sort: { fields: [frontmatter___date], order: DESC }) {\n          edges {\n            node {\n              frontmatter {\n                date(formatString: \"MMMM DD, YYYY\")\n                year: date(formatString: \"YYYY\")\n                title\n                pathForPage\n              }\n            }\n          }\n        }\n      }\n    `}\n    render={({ allMarkdownRemark: { edges } }) => {\n      const groupedPosts = R.groupBy(ele => {\n        return ele.node.frontmatter.year\n      }, edges)\n\n      const elems = Object.keys(groupedPosts)\n        .sort()\n        .reverse()\n\n      return elems.map(ele => {\n        return (\n          <React.Fragment>\n            <BlogGroup>{ele}</BlogGroup>\n            {groupedPosts[ele].map(\n              ({\n                node: {\n                  frontmatter: { title, pathForPage },\n                },\n              }) => {\n                return (\n                  <HomeContentLinks>\n                    <a href={pathForPage} key={title}>\n                      {title}\n                    </a>\n                  </HomeContentLinks>\n                )\n              }\n            )}\n          </React.Fragment>\n        )\n      })\n    }}\n  />\n)\n\nexport default IndexPageBlogList\n"],"sourceRoot":""}