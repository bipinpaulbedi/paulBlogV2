{"version":3,"sources":["webpack:///./src/components/blogList.js","webpack:///./src/pages/index.js"],"names":["BlogGroup","styled","div","_templateObject","HomeContentLinks","p","_templateObject2","IndexPageBlogList","react_default","a","createElement","gatsby_browser_entry","query","render","_ref","edges","allMarkdownRemark","groupedPosts","R","ele","node","frontmatter","year","Object","keys","sort","reverse","map","Fragment","_ref2","_ref2$node$frontmatte","title","pathForPage","href","key","data","_3375400885","IndexPage","layout","seo","keywords","blogList"],"mappings":"8gBAKA,IAAMA,EAAYC,IAAOC,IAAVC,KAKTC,EAAmBH,IAAOI,EAAVC,KAiEPC,EArDW,kBACxBC,EAAAC,EAAAC,cAACC,EAAA,EAAD,CACEC,MAAK,aAgBLC,OAAQ,SAAAC,GAAsC,IAAdC,EAAcD,EAAnCE,kBAAqBD,MACxBE,EAAeC,IAAU,SAAAC,GAC7B,OAAOA,EAAIC,KAAKC,YAAYC,MAC3BP,GAMH,OAJcQ,OAAOC,KAAKP,GACvBQ,OACAC,UAEUC,IAAI,SAAAR,GACf,OACEX,EAAAC,EAAAC,cAACF,EAAAC,EAAMmB,SAAP,KACEpB,EAAAC,EAAAC,cAACV,EAAD,KAAYmB,GACXF,EAAaE,GAAKQ,IACjB,SAAAE,GAIM,IAAAC,EAAAD,EAHJT,KACEC,YAAeU,EAEbD,EAFaC,MAAOC,EAEpBF,EAFoBE,YAGxB,OACExB,EAAAC,EAAAC,cAACN,EAAD,KACEI,EAAAC,EAAAC,cAAA,KAAGuB,KAAMD,EAAaE,IAAKH,GACxBA,UAvCrBI,KAAAC,KCVaC,UAPG,kBAChB7B,EAAAC,EAAAC,cAAC4B,EAAA,EAAD,KACE9B,EAAAC,EAAAC,cAAC6B,EAAA,EAAD,CAAKR,MAAM,OAAOS,SAAU,sBAC5BhC,EAAAC,EAAAC,cAAC+B,EAAD","file":"component---src-pages-index-js-8c283bbe13331cb0f8c4.js","sourcesContent":["import React from \"react\"\nimport { StaticQuery, graphql } from \"gatsby\"\nimport * as R from \"ramda\"\nimport styled from \"styled-components\"\n\nconst BlogGroup = styled.div`\n  font-size: 2em;\n  color: #bbb;\n`\n\nconst HomeContentLinks = styled.p`\n  font-size: 1.2em;\n  margin-top: 0.5em;\n  margin-bottom: 0.5em;\n  a {\n    color: #333;\n    :hover {\n      color: #ff5252;\n    }\n  }\n`\n\nconst IndexPageBlogList = () => (\n  <StaticQuery\n    query={graphql`\n      query IndexPageBlogListQuery {\n        allMarkdownRemark(sort: { fields: [frontmatter___date], order: DESC }) {\n          edges {\n            node {\n              frontmatter {\n                date(formatString: \"MMMM DD, YYYY\")\n                year: date(formatString: \"YYYY\")\n                title\n                pathForPage\n              }\n            }\n          }\n        }\n      }\n    `}\n    render={({ allMarkdownRemark: { edges } }) => {\n      const groupedPosts = R.groupBy(ele => {\n        return ele.node.frontmatter.year\n      }, edges)\n\n      const elems = Object.keys(groupedPosts)\n        .sort()\n        .reverse()\n\n      return elems.map(ele => {\n        return (\n          <React.Fragment>\n            <BlogGroup>{ele}</BlogGroup>\n            {groupedPosts[ele].map(\n              ({\n                node: {\n                  frontmatter: { title, pathForPage },\n                },\n              }) => {\n                return (\n                  <HomeContentLinks>\n                    <a href={pathForPage} key={title}>\n                      {title}\n                    </a>\n                  </HomeContentLinks>\n                )\n              }\n            )}\n          </React.Fragment>\n        )\n      })\n    }}\n  />\n)\n\nexport default IndexPageBlogList\n","import React from \"react\"\n\nimport Layout from \"../components/layout\"\nimport SEO from \"../components/seo\"\nimport IndexPageBlogList from \"../components/blogList\"\n\nconst IndexPage = () => (\n  <Layout>\n    <SEO title=\"Home\" keywords={[`bipin paul bedi`]} />\n    <IndexPageBlogList />\n  </Layout>\n)\n\nexport default IndexPage\n"],"sourceRoot":""}