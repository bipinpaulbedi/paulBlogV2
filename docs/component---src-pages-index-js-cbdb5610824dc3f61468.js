(window.webpackJsonp=window.webpackJsonp||[]).push([[4],{RXBc:function(e,t,r){"use strict";r.r(t);var a=r("q1tI"),n=r.n(a),o=r("Bl7J"),i=r("vrFN"),c=(r("rGqo"),r("yt8O"),r("Btvt"),r("RW0V"),r("Vd3H"),r("ULb5")),l=r("Wbzz"),s=r("8zrh"),m=r("vOnD"),d=m.a.div.withConfig({displayName:"blogList__BlogGroup",componentId:"sc-5y52de-0"})(["font-size:2em;color:#bbb;"]),p=m.a.p.withConfig({displayName:"blogList__HomeContentLinks",componentId:"sc-5y52de-1"})(["font-size:1.2em;margin-top:0.5em;margin-bottom:0.5em;a{color:#333;:hover{color:#ff5252;}}"]),u=function(){return n.a.createElement(l.StaticQuery,{query:"3375400885",render:function(e){var t=e.allMarkdownRemark.edges,r=s.a((function(e){return e.node.frontmatter.year}),t);return Object.keys(r).sort().reverse().map((function(e){return n.a.createElement(n.a.Fragment,null,n.a.createElement(d,null,e),r[e].map((function(e){var t=e.node.frontmatter,r=t.title,a=t.pathForPage;return n.a.createElement(p,null,n.a.createElement("a",{href:a,key:r},r))})))}))},data:c})};t.default=function(){return n.a.createElement(o.a,null,n.a.createElement(i.a,{title:"Home",keywords:["bipin paul bedi"]}),n.a.createElement(u,null))}},ULb5:function(e){e.exports=JSON.parse('{"data":{"allMarkdownRemark":{"edges":[{"node":{"frontmatter":{"date":"November 07, 2019","year":"2019","title":"functional design patterns using rust","pathForPage":"2019-11-07-functional-design-patterns-using-rust"}}},{"node":{"frontmatter":{"date":"November 05, 2019","year":"2019","title":"clean architecture in functional programming","pathForPage":"2019-11-05-clean-architecture-in-functional-programming"}}},{"node":{"frontmatter":{"date":"March 27, 2019","year":"2019","title":"57 counterproductive software design practices - anti patterns.","pathForPage":"2019-03-27-software-anti-patterns"}}},{"node":{"frontmatter":{"date":"January 28, 2019","year":"2019","title":"9 laws of architecting microservices","pathForPage":"2019-01-28-microservices-design-pattern"}}},{"node":{"frontmatter":{"date":"January 04, 2019","year":"2019","title":"phoenix/elixir - concurrency actor model with \'let it crash\' philosophy","pathForPage":"2019-01-04-elixir-concurrency-models"}}},{"node":{"frontmatter":{"date":"October 20, 2018","year":"2018","title":"ELI5 - Asymptotic computational complexity simplified","pathForPage":"2018-10-20-asymtotic-notations"}}},{"node":{"frontmatter":{"date":"October 12, 2018","year":"2018","title":"L1 & L2 model regularizations techniques","pathForPage":"2018-10-12-regularization-for-machine-learning-models"}}},{"node":{"frontmatter":{"date":"October 10, 2018","year":"2018","title":"Developers guide to designing REST endpoints","pathForPage":"2018-10-10-coding-blueprint-for-pragmatic-rest-api-developers"}}}]}}}')}}]);
//# sourceMappingURL=component---src-pages-index-js-cbdb5610824dc3f61468.js.map