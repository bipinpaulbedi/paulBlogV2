{"componentChunkName":"component---src-templates-tag-cloud-list-js","path":"/tagcloud/design-patterns","result":{"data":{"allMarkdownRemark":{"edges":[{"node":{"frontmatter":{"date":"November 07, 2019","year":"2019","title":"functional design patterns using rust","pathForPage":"2019-11-07-functional-design-patterns-using-rust","tags":["functional-programming","design-patterns","technology"]}}},{"node":{"frontmatter":{"date":"November 05, 2019","year":"2019","title":"clean architecture in functional programming","pathForPage":"2019-11-05-clean-architecture-in-functional-programming","tags":["functional-programming","design-patterns","technology","clean-architecture"]}}},{"node":{"frontmatter":{"date":"March 27, 2019","year":"2019","title":"57 counterproductive software design practices - anti patterns.","pathForPage":"2019-03-27-software-anti-patterns","tags":["microservices","design-patterns","technology","anti-patterns"]}}},{"node":{"frontmatter":{"date":"January 28, 2019","year":"2019","title":"9 laws of architecting microservices","pathForPage":"2019-01-28-microservices-design-pattern","tags":["microservices","design-patterns","technology"]}}},{"node":{"frontmatter":{"date":"January 04, 2019","year":"2019","title":"phoenix/elixir - concurrency actor model with 'let it crash' philosophy","pathForPage":"2019-01-04-elixir-concurrency-models","tags":["elixir","phoenix","actor-model","design-patterns","functional-programming","technology"]}}},{"node":{"frontmatter":{"date":"October 10, 2018","year":"2018","title":"Developers guide to designing REST endpoints","pathForPage":"2018-10-10-coding-blueprint-for-pragmatic-rest-api-developers","tags":["api","design","design-patterns"]}}}]}},"pageContext":{"isCreatedByStatefulCreatePages":false,"tag":"design-patterns"}}}